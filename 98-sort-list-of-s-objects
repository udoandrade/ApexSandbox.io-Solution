public List<Account> getAccounts(List<Account> accounts) {
    
    if (accounts == null) return null;

    List<AccountWrapper> wrapperList = new List<AccountWrapper>();
    for (Account aIndex : accounts) {
        wrapperList.add(new AccountWrapper(aIndex));
    }
    wrapperList.sort();

    List<Account> sortedList = new List<Account>();
    for (AccountWrapper compIndex : wrapperList) {
        sortedList.add(compIndex.acc);
    }
    return sortedList;

}

public class AccountWrapper implements Comparable{

    public Account acc;

    public AccountWrapper(Account ac) {
        if (ac == null) {
            Exception ex = new NullPointerException();
            ex.setMessage('Account argument can\'t be null');
            throw ex;
        }
        acc = ac;
    }

    public Integer compareTo(Object compareTo) {

        AccountWrapper compareToAcc = (AccountWrapper)compareTo;
        Integer returnValue;

        if (acc.AnnualRevenue == null && compareToAcc.acc.AnnualRevenue == null) {
            returnValue = 0;
        }else if (acc.AnnualRevenue == null && compareToAcc.acc.AnnualRevenue != null) {
            returnValue = -1;
        }else if (acc.AnnualRevenue != null && compareToAcc.acc.AnnualRevenue == null) {
            returnValue = 1;
        }else if (acc.AnnualRevenue < compareToAcc.acc.AnnualRevenue) {
            returnValue = 1;
        }else if (acc.AnnualRevenue > compareToAcc.acc.AnnualRevenue) {
            returnValue = -1;
        }
        return returnValue;
    }
    
}
